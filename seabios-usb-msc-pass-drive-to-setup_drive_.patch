From a7097236070eca1d805a39b6d9ea05ab5ebe943e Mon Sep 17 00:00:00 2001
From: Paolo Bonzini <pbonzini@redhat.com>
Date: Fri, 27 Jan 2012 16:36:00 +0100
Subject: [PATCH 09/22] usb-msc: pass drive to setup_drive_*

RH-Author: Paolo Bonzini <pbonzini@redhat.com>
Message-id: <1327682173-30723-10-git-send-email-pbonzini@redhat.com>
Patchwork-id: 36983
O-Subject: [RHEL6.3 PATCH seabios 09/22] usb-msc: pass drive to setup_drive_*
Bugzilla: 782028
RH-Acked-by: Laszlo Ersek <lersek@redhat.com>
RH-Acked-by: Markus Armbruster <armbru@redhat.com>
RH-Acked-by: Alon Levy <alevy@redhat.com>

The two functions do not need anymore a disk_op_s.

Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry-picked from 2b6a6761341e5df7312d937f954fae3d6897af3f)

Conflicts:
	src/usb-msc.c (we use BDFs to identify PCI devices)
---
 src/usb-msc.c |   22 +++++++++++-----------
 1 files changed, 11 insertions(+), 11 deletions(-)

Signed-off-by: Michal Novotny <minovotn@redhat.com>
---
 src/usb-msc.c |   22 +++++++++++-----------
 1 files changed, 11 insertions(+), 11 deletions(-)

diff --git a/src/usb-msc.c b/src/usb-msc.c
index 961a2b4..54a5217 100644
--- a/src/usb-msc.c
+++ b/src/usb-msc.c
@@ -148,29 +148,29 @@ process_usb_op(struct disk_op_s *op)
  ****************************************************************/
 
 static int
-setup_drive_cdrom(struct disk_op_s *op, char *desc)
+setup_drive_cdrom(struct drive_s *drive, char *desc)
 {
-    op->drive_g->sectors = (u64)-1;
+    drive->sectors = (u64)-1;
     struct usb_pipe *pipe = container_of(
-        op->drive_g, struct usbdrive_s, drive)->bulkout;
+        drive, struct usbdrive_s, drive)->bulkout;
     int prio = bootprio_find_usb(pipe->cntl->bdf, pipe->path);
-    boot_add_cd(op->drive_g, desc, prio);
+    boot_add_cd(drive, desc, prio);
     return 0;
 }
 
 static int
-setup_drive_hd(struct disk_op_s *op, char *desc)
+setup_drive_hd(struct drive_s *drive, char *desc)
 {
-    if (op->drive_g->blksize != DISK_SECTOR_SIZE) {
-        dprintf(1, "Unsupported USB MSC block size %d\n", op->drive_g->blksize);
+    if (drive->blksize != DISK_SECTOR_SIZE) {
+        dprintf(1, "Unsupported USB MSC block size %d\n", drive->blksize);
         return -1;
     }
 
     // Register with bcv system.
     struct usb_pipe *pipe = container_of(
-        op->drive_g, struct usbdrive_s, drive)->bulkout;
+        drive, struct usbdrive_s, drive)->bulkout;
     int prio = bootprio_find_usb(pipe->cntl->bdf, pipe->path);
-    boot_add_hd(op->drive_g, desc, prio);
+    boot_add_hd(drive, desc, prio);
     return 0;
 }
 
@@ -236,7 +236,7 @@ usb_msc_init(struct usb_pipe *pipe
     if (pdt == USB_MSC_TYPE_CDROM) {
         char *desc = znprintf(MAXDESCSIZE, "DVD/CD [USB Drive %s %s %s]"
                               , vendor, product, rev);
-        ret = setup_drive_cdrom(&dop, desc);
+        ret = setup_drive_cdrom(&udrive_g->drive, desc);
     } else {
         struct cdbres_read_capacity capdata;
         ret = cdb_read_capacity(&dop, &capdata);
@@ -252,7 +252,7 @@ usb_msc_init(struct usb_pipe *pipe
 
         char *desc = znprintf(MAXDESCSIZE, "USB Drive %s %s %s"
                               , vendor, product, rev);
-        ret = setup_drive_hd(&dop, desc);
+        ret = setup_drive_hd(&udrive_g->drive, desc);
     }
     if (ret)
         goto fail;
-- 
1.7.7.6

