From 94f3f5861a1bb804d4c9ab28119013cf592313f0 Mon Sep 17 00:00:00 2001
From: Igor Mammedov <imammedo@redhat.com>
Date: Sat, 10 Mar 2012 13:18:48 -0300
Subject: [PATCH 1/2] Halt if number of started cpus are more then expected

RH-Author: Igor Mammedov <imammedo@redhat.com>
Message-id: <1331385530-20156-2-git-send-email-imammedo@redhat.com>
Patchwork-id: 38454
O-Subject: [RHEL6.3 PATCH seabios 1/3] Halt if number of started cpus are more then expected
Bugzilla: 805168
RH-Acked-by: Laszlo Ersek <lersek@redhat.com>
RH-Acked-by: Alex Williamson <alex.williamson@redhat.com>
RH-Acked-by: Andrew Jones <drjones@redhat.com>

Bugzilla: 802033
Upstream: posted

Reduce amount of consumed cpu time (i.e. don't spin forever) if
number of started cpus are more then expected. And print a bug
message into debug port.

Signed-off-by: Igor Mammedov <imammedo@redhat.com>
---
 src/smp.c |    8 +++++++-
 1 files changed, 7 insertions(+), 1 deletions(-)

Signed-off-by: Eduardo Habkost <ehabkost@raisama.net>
---
 src/smp.c |    8 +++++++-
 1 files changed, 7 insertions(+), 1 deletions(-)

diff --git a/src/smp.c b/src/smp.c
index 89c01f3..fe81cdc 100644
--- a/src/smp.c
+++ b/src/smp.c
@@ -113,8 +113,14 @@ smp_probe(void)
         msleep(10);
     } else {
         u8 cmos_smp_count = inb_cmos(CMOS_BIOS_SMP_COUNT);
-        while (cmos_smp_count + 1 != readl(&CountCPUs))
+        while (cmos_smp_count + 1 != readl(&CountCPUs)) {
+            if (cmos_smp_count + 1 < readl(&CountCPUs)) {
+                dprintf(1, "BUG: Expected %d cpu(s) but %d cpus started\n",
+                        cmos_smp_count + 1, readl(&CountCPUs));
+                hlt();
+            }
             yield();
+        }
     }
 
     // Restore memory.
-- 
1.7.3.2

